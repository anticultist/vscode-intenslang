====================
empty operator block
====================

OPERATOR
END OPERATOR;

---
(source_file
  (operator_block))

===============================
single task forward declaration
===============================

OPERATOR
  TASK mytask;
END OPERATOR;

---
(source_file
  (operator_block
    (tasks_declaration
      (task_declaration
        (task_identifier)))))

==================================
multiple task forward declarations
==================================

OPERATOR
  TASK mytask, mytask2, mytask3;
END OPERATOR;

---
(source_file
  (operator_block
    (tasks_declaration
      (task_declaration (task_identifier))
      (task_declaration (task_identifier))
      (task_declaration (task_identifier)))))

======================================================
single task declaration with an empty options and body
======================================================

OPERATOR
  TASK mytask {} {};
END OPERATOR;

---
(source_file
  (operator_block
    (tasks_declaration
      (task_declaration
        (task_identifier)
        (parameter_block)
        (task_body)))))

===================
process declaration
===================

OPERATOR
  PROCESS my_process_pr : BATCH { "my_process.pl" };
END OPERATOR;

---
(source_file
  (operator_block
    (operators_declaration
      (operator_declaration
        (identifier)
        (parent)
        (parameter_block (string))))))

=======================
file stream declaration
=======================

OPERATOR
  FILESTREAM my_file_stream_fs = my_stream
    {"My Stream", FILTER="CSV (*.csv)", WRITEONLY};
END OPERATOR;

---
(source_file
  (operator_block
    (operators_declaration
      (operator_declaration
        (identifier)
        (reference)
        (parameter_block
          (string)
          (parameter_assignment (parameter) (string))
          (parameter))))))

==================
socket declaration
==================

OPERATOR
  SOCKET my_socket2 {
    MFM,
    PORT=333,
    STREAM=my_stream2,
    struct[*].data,
    THUMBNAIL(struct[*].thumbnail, 200, 200)};
END OPERATOR;

---
(source_file
  (operator_block
    (operators_declaration
      (operator_declaration
        (identifier)
        (parameter_block
          (parameter)
          (parameter_assignment (parameter) (number))
          (parameter_assignment (parameter) (identifier))
          (field_expression
            (identifier)
            (list (wildcard))
            (identifier))
          (function_call
            (function_name)
            (function_arguments
              (field_expression
                (identifier)
                (list (wildcard))
                (identifier))
              (number)
              (number))))))))
