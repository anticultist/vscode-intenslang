====================
empty streamer block
====================

STREAMER
END STREAMER;

---
(source_file
  (streamer_block))

========================
simple stream definition
========================

STREAMER
  simple_stream (!foo, foo);
END STREAMER;

---
(source_file
  (streamer_block
    (stream_definition
      (stream_identifier)
      (negation (identifier))
      (identifier))))

=============================
stream definition with option
=============================

STREAMER
  my_stream2 {XML, PROCESS="the_file.txt"}
  (
    foo, bar
  );
END STREAMER;

---
(source_file
  (streamer_block
    (stream_definition
      (stream_identifier)
      (parameter_block
        (parameter (identifier))
        (parameter_assignment
          (parameter (identifier))
          (string)))
      (identifier)
      (identifier))))

====================================
stream definition with nested option
====================================

STREAMER
  my_stream { XML {SCHEMA="my_schema.xsd", VERSION="1.0"} }
    (foo, bar, EOLN);
END STREAMER;

---
(source_file
  (streamer_block
    (stream_definition
      (stream_identifier)
      (parameter_block
        (parameter (identifier))
        (parameter_block
          (parameter_assignment (parameter (identifier)) (string))
          (parameter_assignment (parameter (identifier)) (string))))
      (identifier)
      (identifier)
      (eoln))))

=================================
stream definition with a wildcard
=================================

STREAMER
  my_stream (
    ( foo.bar[#].baz.id )
  );
END STREAMER;

---
(source_file
  (streamer_block
    (stream_definition
      (stream_identifier)
      (tuple
        (field_expression
          (identifier)
          (identifier)
          (list (wildcard))
          (identifier)
          (identifier))))))

=========================================
stream definition with a field conversion
=========================================

STREAMER
  my_stream2 {PROCESS="the_file.txt"} (
    foo, foo.baz:-10:2:TSEP
  );
END STREAMER;
