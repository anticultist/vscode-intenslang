======================
empty ui-manager block
======================

UI_MANAGER
END UI_MANAGER;

---
(source_file
  (ui_manager_block))

=================
index declaration
=================

UI_MANAGER
  INDEX my_index;
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (ui_declarations
      (ui_declaration
        (identifier)))))

================================================
empty field group with space separated parameter
================================================

UI_MANAGER
  FIELDGROUP
    my_empty_group_fg {TABLE ORIENTATION=VERTICAL} ()
  ;
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (field_group_declarations
      (field_group_declaration
        (identifier)
        (parameter_block
          (parameter_assignment (parameter (identifier) (identifier)) (identifier)))
        (field_group_lines)))))

=======================
field group declaration
=======================

UI_MANAGER
  FIELDGROUP
    my_group_fg { MARGIN(0) } (
      foo.bar,
      "Lorem ipsum"
    ),
    my_group2_fg {TABLE ORIENTATION=VERTICAL} ()
  ;
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (field_group_declarations
      (field_group_declaration
        (identifier)
        (parameter_block
          (function_call
            (function_name)
            (function_arguments
              (number))))
        (field_group_lines
          (field_group_line
            (field_expression (identifier) (identifier)))
          (field_group_line
            (string))))
      (field_group_declaration
        (identifier)
        (parameter_block
          (parameter_assignment
            (parameter (identifier) (identifier))
            (identifier)))
        (field_group_lines)))))

===========================================
field group declaration with line parameter
===========================================

UI_MANAGER
  FIELDGROUP
    foo_fg (
      LABEL(foo.bar) " " foo_folder{COLSPAN=2}
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (field_group_declarations
      (field_group_declaration
        (identifier)
        (field_group_lines
          (field_group_line
            (function_call
              (function_name)
              (function_arguments
                (field_expression
                  (identifier)
                  (identifier))))
            (string)
            (identifier)
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (number)))))))))

======================================
field group declaration with alignment
======================================

UI_MANAGER
  FIELDGROUP
    foo_fg (
      LABEL(foo.bar){COLSPAN=2} foo.bar> VOID
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (field_group_declarations
      (field_group_declaration
        (identifier)
        (field_group_lines
          (field_group_line
            (function_call
              (function_name)
              (function_arguments
                (field_expression
                  (identifier)
                  (identifier))))
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (number)))
            (field_expression
              (identifier)
              (identifier))
            (field_alignment)
            (identifier)))))))


=============================================
field group declaration with field conversion
=============================================

UI_MANAGER
  FIELDGROUP
    foo1_fg (
      bar*1e9:9:2
    ),
    foo2_fg (
      bar:9:2
    ),
    foo3_fg (
      foo[4]:9:2
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (field_group_declarations
      (field_group_declaration
        (identifier)
        (field_group_lines
          (field_group_line
            (binary_expression
              (identifier)
              (number))
            (field_conversion
              (number)
              (number)))))
      (field_group_declaration
        (identifier)
        (field_group_lines
          (field_group_line
            (identifier)
            (field_conversion
              (number)
              (number)))))
      (field_group_declaration
        (identifier)
        (field_group_lines
          (field_group_line
            (field_expression
              (identifier)
              (list (number)))
            (field_conversion
              (number)
              (number))))))))

=========================================
field group declaration with field access
=========================================

UI_MANAGER
  FIELDGROUP
    foo1_fg (
      foo.bar[0].baz
    );
END UI_MANAGER;

====================
folder declaration 1
====================

UI_MANAGER
  FOLDER my_folder { LEFT, VERTICAL, STRETCH } (
      ["":baz, FUNC = myfunc4, FRAME] (my_group_fg)
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (folder_declarations
      (folder_declaration
        (identifier)
        (parameter_block
          (parameter (identifier))
          (parameter (identifier))
          (parameter (identifier)))
        (folder_elements
          (folder_element
            (folder_element_properties
              (label_assignment (string) (identifier))
              (parameter_assignment
                (parameter (identifier))
                (identifier))
              (identifier))
            (folder_subitems (identifier))))))))

====================
folder declaration 2
====================

UI_MANAGER
  FOLDER my_folder { LEFT, VERTICAL, STRETCH } (
      ["A":baz, FUNC = myfunc4, FRAME] (
        (
          ( foo_fg ),
          ( bar_fg )
        ) [FRAME, "C"]
      ),
      ["B":baz, FUNC = myfunc4, FRAME] (my_group_fg)
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (folder_declarations
      (folder_declaration
        (identifier)
        (parameter_block
          (parameter (identifier))
          (parameter (identifier))
          (parameter (identifier)))
        (folder_elements
          (folder_element
            (folder_element_properties
              (label_assignment
                (string)
                (identifier))
              (parameter_assignment
                (parameter (identifier))
                (identifier))
              (identifier))
            (folder_subitems
              (folder_element
                (folder_subitems
                  (folder_element
                    (folder_subitems
                      (identifier)))
                  (folder_element
                    (folder_subitems
                      (identifier))))
                (folder_element_options
                  (identifier)
                  (string)))))
          (folder_element
            (folder_element_properties
              (label_assignment
                (string)
                (identifier))
              (parameter_assignment
                (parameter (identifier))
                (identifier))
              (identifier))
            (folder_subitems
              (identifier))))))))

=====================
2d plot declaration 1
=====================

UI_MANAGER
  PLOT2D my_plot {"My Plot"} (
      plot {
        XAXIS { LABEL="X-Axis" },
        YAXIS1 { LABEL="Y-Axis", FORMAT="10" }
      } ()
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (plot_declarations
      (plot_declaration
        (identifier)
        (parameter_block
          (string))
        (plot_items
          (identifier)
          (parameter_block
            (parameter
              (identifier))
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (string)))
            (parameter
              (identifier))
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (string))
              (parameter_assignment
                (parameter (identifier))
                (string)))))))))

=====================
2d plot declaration 2
=====================

UI_MANAGER
  PLOT2D my_plot {"My Plot"} (
    plot {
      XAXIS { LABEL="X-Axis" },
      YAXIS1 { LABEL="Y-Axis", FORMAT="10" }
    } (
      foo.bar*1e3 (
        foo.bar { LABEL=LABEL(foo.bar), YAXIS1 },
        foo.bar { LABEL=LABEL(foo.bar), YAXIS1 }
      ),
      foo.bar*1e3 (
        foo.bar { YAXIS1, MARKER(foo.bar[*]) }
      )
    )
  );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (plot_declarations
      (plot_declaration
        (identifier)
        (parameter_block (string))
        (plot_items
          (identifier)
          (parameter_block
            (parameter (identifier))
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (string)))
            (parameter (identifier))
            (parameter_block
              (parameter_assignment
                (parameter (identifier))
                (string))
              (parameter_assignment
                (parameter (identifier))
                (string))))
          (plot_items
            (binary_expression
              (field_expression
                (identifier)
                (identifier))
              (number))
            (plot_items
              (field_expression
                (identifier)
                (identifier))
              (parameter_block
                (parameter_assignment
                  (parameter (identifier))
                  (function_call
                    (function_name)
                    (function_arguments
                      (field_expression (identifier) (identifier)))))
                (parameter (identifier))))
            (plot_items
              (field_expression
                (identifier)
                (identifier))
              (parameter_block
                (parameter_assignment
                  (parameter
                    (identifier))
                  (function_call
                    (function_name)
                    (function_arguments
                      (field_expression (identifier) (identifier)))))
                (parameter (identifier)))))
          (plot_items
            (binary_expression
              (field_expression (identifier) (identifier))
              (number))
            (plot_items
              (field_expression (identifier) (identifier))
              (parameter_block
                (parameter (identifier))
                (function_call
                  (function_name)
                  (function_arguments
                    (field_expression
                      (identifier)
                      (identifier)
                      (list (wildcard)))))))))))))

=================
table declaration
=================

UI_MANAGER
  TABLE my_table {
      HORIZONTAL(TABLESIZE=7, RANGE(1)),
      VERTICAL(TABLESIZE=7, RANGE(1))
    }
    (
      LEFT();
      TOP();
      TABLE();
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (table_declarations
      (table_declaration
        (identifier)
        (parameter_block
          (function_call
            (function_name)
            (function_arguments
              (parameter_assignment
                (parameter (identifier))
                (number))
              (function_call
                (function_name)
                (function_arguments (number)))))
          (function_call
            (function_name)
            (function_arguments
              (parameter_assignment
                (parameter (identifier))
                (number))
              (function_call
                (function_name)
                (function_arguments (number))))))
        (table_configuration
          (function_call (function_name))
          (function_call (function_name))
          (function_call (function_name)))))))

=================
image declaration
=================

UI_MANAGER
  IMAGE img1 {
    SIZE(256,256),
    SOCKET=my_socket,
    SETTINGS=foo.bar};
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (ui_declarations
      (ui_declaration
        (identifier)
        (parameter_block
          (function_call
            (function_name)
            (function_arguments (number) (number)))
          (parameter_assignment
            (parameter (identifier))
            (identifier))
          (parameter_assignment
            (parameter (identifier))
            (field_expression (identifier) (identifier))))))))

================
form declaration
================

UI_MANAGER
  FORM
    my_form1 {
        "fancy name 1",
        HIDDEN,
        CLOSE_BUTTON=NONE,
        FUNC=myfunc4
      }
      ( ),
    log_win_form {
        "Logging Window"
      }
      (LOG_WINDOW { SIZE=2000 } ),
    other_form { "My Control"}
    (
      (
        (
          (
            foo_fg,
            VOID(20),
            bar_fg
          )[FRAME]
        )
        , VOID(20)
      )
    );
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (form_declarations
      (form_declaration
        (identifier)
        (parameter_block
          (string)
          (parameter (identifier))
          (parameter_assignment
            (parameter (identifier))
            (none))
          (parameter_assignment
            (parameter (identifier))
            (identifier)))
        (form_element_list))
      (form_declaration
        (identifier)
        (parameter_block
          (string))
        (form_element_list
          (special_function_call
            (function_name)
            (function_arguments
              (parameter_assignment
                (parameter (identifier))
                (number))))))
      (form_declaration
        (identifier)
        (parameter_block
          (string))
        (form_element_list
          (form_element_list
            (form_element_list
              (form_element_list
                (parameter (identifier))
                (function_call
                  (function_name)
                  (function_arguments
                    (number)))
                (parameter (identifier))
                (form_element_options
                  (parameter (identifier)))))
            (function_call
              (function_name)
              (function_arguments
                (number)))))))))

================
menu declaration
================

UI_MANAGER
  MENU PRINT {EXPLICIT} (SEPARATOR),
     "&Tools" (FUNC hello_func="Show Hello World Message",
               MENU "submenu" (FUNC myfunc4="Test"),
               FORM fancy_form,
               FUNC bye_func="Quit");
END UI_MANAGER;

---
(source_file
  (ui_manager_block
    (menu_declarations
      (menu_declaration
        (identifier)
        (parameter_block
          (parameter (identifier)))
        (menu_items
          (parameter (identifier))))
      (menu_declaration
        (string)
        (menu_items
          (menu_function_item
            (identifier)
            (string))
          (menu_submenu_item
            (string)
            (menu_items
              (menu_function_item
                (identifier)
                (string))))
          (menu_form_item
            (identifier))
          (menu_function_item
            (identifier)
            (string)))))))
